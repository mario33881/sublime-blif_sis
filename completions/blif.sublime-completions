{
    "scope": "source.blif",
    "completions": [
        {
            "trigger": ".model",
            "annotation": "model",
            "contents": ".model ${1:name}\n$0\n.end",
            "kind": "snippet",
            "details": "Define a sub-cell by specifying\nthe name of its model.\n\nExample:\n.model mycircuitsname"
        },
        {
            "trigger": ".inputs",
            "annotation": "inputs",
            "contents": ".inputs ${1:in}\n$0",
            "kind": "snippet",
            "details": "Define the name of the input(s).\n\nExample:\n.inputs a b c\n> Where a b c are\nthe names of the inputs."
        },
        {
            "trigger": ".outputs",
            "annotation": "outputs",
            "contents": ".outputs ${1:out}\n$0",
            "kind": "snippet",
            "details": "Define the name of the output(s).\n\nExample:\n.outputs x y z\n> Where x y z are\nthe names of the outputs."
        },
        {
            "trigger": ".names",
            "annotation": "names",
            "contents": ".names ${1:in} ${2:out}\n$0",
            "kind": "snippet",
            "details": "Define a link between inputs\nand an output\n(on a new line write a truth table\nwith only minterms).\n\nExample:\n.names a b o\n> Where a and b are inputs\n> and o is an output.\n\n> ATTENTION: One .names corresponds to\n> one and one only output."
        },
        {
            "trigger": ".exdc",
            "annotation": "exdc",
            "contents": ".exdc\n$0",
            "kind": "snippet",
            "details": "Define a link between inputs\nand an output\n(on a new line write a truth table\nwith only minterms).\n\nExample:\n.names a b o\n> Where a and b are inputs\n> and o is an output.\n\n> ATTENTION: One .names corresponds to\n> one and one only output."
        },
        {
            "trigger": ".start_kiss",
            "annotation": "start_kiss",
            "contents": ".start_kiss\n$0\n.end_kiss",
            "kind": "snippet",
            "details": "Defines a FSM.\n(.start_kiss has to be\nclosed with .end_kiss)"
        },
        {
            "trigger": ".end_kiss",
            "annotation": "end_kiss",
            "contents": ".end_kiss\n$0",
            "kind": "snippet",
            "details": "Closes the definition of an FSM.\n(which has to be defined first\nusing the .start_kiss keyword)."
        },
        {
            "trigger": ".i",
            "annotation": "i",
            "contents": ".i ${1:inputs_number} # Number of inputs\n$0",
            "kind": "snippet",
            "details": "Specifies the number of inputs\nof a FSM.\n(needs to be between .start_kiss\nand .end_kiss).\n\nExample:\n.i 3\n> Where 3 is the number\n> of inputs of the FSM."
        },
        {
            "trigger": ".o",
            "annotation": "o",
            "contents": ".o ${1:outputs_number} # Number of outputs\n$0",
            "kind": "snippet",
            "details": "Specifies the number of outputs\nof a FSM.\n(needs to be between .start_kiss\nand .end_kiss).\n\nExample:\n.o 2\n> Where 2 is the number\n> of outputs of the FSM."
        },
        {
            "trigger": ".s",
            "annotation": "s",
            "contents": ".s ${1:states_number} # Number of states\n$0",
            "kind": "snippet",
            "details": "Specifies the number of states of\na FSM.\n(needs to be between .start_kiss\nand .end_kiss).\n\nExample:\n.s 5\n> Where 5 is the number\n> of states of the FSM."
        },
        {
            "trigger": ".p",
            "annotation": "p",
            "contents": ".p ${1:transitions_number} # Number of states transitions\n$0",
            "kind": "snippet",
            "details": "Specifies the number of\nstates transitions of a FSM.\n(needs to be between\n.start_kiss and .end_kiss).\n\nExample:\n.p 40\n> Where 40 is the number\n> of transitions of the FSM."
        },
        {
            "trigger": ".r",
            "annotation": "r",
            "contents": ".r ${1:reset_state} # Name of the reset state\n$0",
            "kind": "snippet",
            "details": "Specifies the name of the\nreset state of a FSM.\n(needs to be between .start_kiss\nand .end_kiss).\n\nExample:\n.r A\n> Where A is the name\n> of the reset state of the FSM."
        },
        {
            "trigger": ".code",
            "annotation": "code",
            "contents": ".code ${1:state_name} ${2:state_encoding}\n$0",
            "kind": "snippet",
            "details": "Define a state encoding.\n\nExample:\n.code A 010\n> Where A is the name of a state,\n> 010 is the encoding of the state"
        },
        {
            "trigger": ".subckt",
            "annotation": "subckt",
            "contents": ".subckt ${1:name} ${2:in_subcell=in_instance} ${3:out_subcell=out_instance}\n$0",
            "kind": "snippet",
            "details": "Initialize an instance\nof a sub-cell model.\n(The sub-cell model could be\ndefined in another file\nand 'imported' using the\n.search keyword)\n\nParameters:\n* (one) name of the sub-cell\n  model to instance\n* (one/many) links between sub-cell\n  model inputs and .inputs inputs\n  (format: 'a=in1 b=in2 ...')\n* (one/many) links between sub-cell\n  model outputs and .outputs outputs\n  (format: 'x=out1 y=out2 ...')."
        },
        {
            "trigger": ".search",
            "annotation": "search",
            "contents": ".search ${1:filename.blif}\n$0",
            "kind": "snippet",
            "details": "Searches (imports) sub-cell models\ndefined in another .blif file.\n(.subckt can then be used to\ninitialize the sub-cell models)\n\nParameters:\n* (one) name of the sub-cell\n  model to instance\n* (one/many) links between sub-cell\n  model inputs and .inputs inputs\n  (format: 'a=in1 b=in2 ...')\n* (one/many) links between sub-cell\n  model outputs and .outputs outputs\n  (format: 'x=out1 y=out2 ...')."
        },
        {
            "trigger": ".latch",
            "annotation": "latch",
            "contents": ".latch ${1:input} ${2:output} ${3:type} ${4:control_clock} ${5:init_val}\n$0",
            "kind": "snippet",
            "details": "Defines a latch."
        },
        {
            "trigger": ".end",
            "annotation": "end",
            "contents": ".end\n$0",
            "kind": "snippet",
            "details": "Closes the definition of\na sub-cell model.\n\nExample:\n.model mycircuitsname\n# ...\n.end"
        }
    ]
}